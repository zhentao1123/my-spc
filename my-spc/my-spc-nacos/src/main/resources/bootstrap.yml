spring:
  application:
    name: my-spc-nacos

  cloud:
    nacos:
      username: nacos
      password: nacos
      discovery:
        server-addr: 127.0.0.1:8848
        ephemeral: true #是否临时实例。临时和持久化的区别主要在健康检查失败后的表现，持久化实例健康检查失败后会被标记成不健康，而临时实例会直接从列表中被删除。
        service: ${spring.application.name} #该值即是默认值
#        ip: 注册的ip地址
#        group: DEFAULT_GROUP #该值即是默认值
#        namespace: #常用场景之一是不同环境的注册的区分隔离。入开发，生产环境
#        watch: true #默认开
      config:
        server-addr: 127.0.0.1:8848
        file-extension: yaml
#        group: DEFAULT_GROUP #该值即是默认值
#        namespace: #常用场景之一是不同环境的注册的区分隔离。入开发，生产环境
        shared-configs[0]:
          data-id: comm.yaml
#            group: DEFAULT_GROUP
#            refresh: true
        extension-configs[0]:
          data-id: ext.yaml


ribbon.nacos.enabled: true #打开负载均衡

# 【 Nacos 集群默认支持的是CAP原则中的AP原则，但是也可切换为CP原则，切换命令如下 】
# curl -X PUT '$NACOS_SERVER:8848/nacos/v1/ns/operator/switches?entry=serverMode&value=CP'
# 同时微服务的bootstrap.properties 需配置如下选项指明注册为临时/永久实例
# AP模式不支持数据一致性，所以只支持服务注册的临时实例，CP模式支持服务注册的永久实例，满足配置文件的一致性

# 【 以下是各config优先级！！！ 从高到低 】
# ${spring.application.name}-${profile}.${file-extension:properties}
# ${spring.application.name}.${file-extension:properties}
# ${spring.application.name}
# extension-configs
# shared-configs

management:
  endpoints:
    web:
      exposure:
        include: '*'